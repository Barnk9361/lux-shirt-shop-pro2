const {json,parseBody,getCookie,verifyJWT,getStore}=require("./_common.js");function nowISO(){return new Date().toISOString()}
exports.handler=async (event)=>{const store=await getStore("chats");if(event.httpMethod==="GET"){const token=getCookie(event,"lxtk");const isAdmin=!!(token&&verifyJWT(token));if(!isAdmin)return json(401,{error:"Unauthorized"});const keys=await store.list();const threads=[];for(const k of keys){const t=await store.get(k);if(t)threads.push(t)}threads.sort((a,b)=>new Date(a.updatedAt||a.createdAt)-new Date(b.updatedAt||b.createdAt));return json(200,threads)}
if(event.httpMethod==="POST"){const params=new URLSearchParams(event.queryStringParameters||{});const action=params.get("action");if(action==="reply"){const token=getCookie(event,"lxtk");const isAdmin=!!(token&&verifyJWT(token));if(!isAdmin)return json(401,{error:"Unauthorized"});const {threadId,text}=parseBody(event);if(!threadId||!text)return json(400,{error:"Missing threadId or text"});const t=await store.get(threadId);if(!t)return json(404,{error:"Thread not found"});t.messages.push({role:"admin",text,time:nowISO()});t.updatedAt=nowISO();await store.set(threadId,t);return json(200,{ok:true,thread:t})}
const {name,text,threadId}=parseBody(event);if(!name||!text)return json(400,{error:"Missing name or text"});if(threadId){const t=await store.get(threadId);if(!t)return json(404,{error:"Thread not found"});t.messages.push({role:"user",text,time:nowISO()});t.updatedAt=nowISO();await store.set(threadId,t);return json(200,{ok:true,threadId,messages:t.messages})}
const id=Math.random().toString(36).slice(2,10);const thread={id,customerName:name,createdAt:nowISO(),updatedAt:nowISO(),messages:[{role:"user",text,time:nowISO()}]};await store.set(id,thread);thread.messages.push({role:"admin",text:"‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞/‡∏Ñ‡∏£‡∏±‡∏ö ‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏à‡∏∞‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÇ‡∏î‡∏¢‡πÄ‡∏£‡πá‡∏ß‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î üôè",time:nowISO()});await store.set(id,thread);return json(200,{ok:true,threadId:id,messages:thread.messages})}
return json(405,{error:"Method Not Allowed"})}
